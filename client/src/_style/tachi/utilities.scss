.nav-link {
	@extend .rounded;
}

/**
 * Remove focus styles for non-keyboard focus.
 */
 :focus:not(:focus-visible) {
	outline: 0;
	box-shadow: none;
  }
  

.hover-opacity {
	// only used on breakcrumbs
	transition: opacity 0.15s ease;
	&:hover {
		@extend .opacity-100;
	}
}

.fullscreen {
	// used by error messages
	inset: 0;
	z-index: 8888;
	@extend .position-fixed;
	@extend .bg-body;
}

.form-length-validation {
	// class selector for a numerical form validation overlay
	@extend .position-absolute;
	z-index: 10;
	right: 2.5em;
	@extend .align-self-center; // firefox says it has no effect but i can say with absolute confidence that it absolutely does
	transition: color 150ms ease-in-out;
}

/*.undraggable {
	// combo class to make items undraggable
	-webkit-user-drag: none;
	-webkit-user-select: none;
	-moz-user-select: none;
	user-select: none;
} probably unecessary */ 

.bg-transition {
	// transition any background
	transition: background-color 75ms ease-in-out;
}

.text-transition {
	// transition any text
	transition: color 75ms ease-in-out;
}

.hide-scrollbar {
	// combo class to hide the scrollbar on any scrollable element
	scrollbar-width: none;
	-webkit-overflow-scrolling: touch;
	-ms-overflow-style: none;
	&::-webkit-scrollbar {
		display: none;
	}
}

.content-box {
	box-sizing: content-box;
}

.waiting {
	animation: pulse 750ms ease-in-out alternate infinite;
}

@mixin animate-rotate($degrees) {
	.animate-rotate-#{$degrees} {
		transition: transform 0.25s ease;

		&.show {
			transform: rotate(#{$degrees}deg);
		}
	}
}

@include animate-rotate(90);
@include animate-rotate(180);

@mixin text-hover($colour) {
	@each $k, $v in $theme-colors {
		.text-hover-#{$k} {
			transition: $nav-link-transition;
			&:hover {
				color: var(--bs-#{$k}) !important;
			}
		}
	}
}

@include text-hover($theme-colors);

@mixin bg-hover($colour) {
	@each $k, $v in $theme-colors {
		.bg-hover-#{$k} {
			transition: $nav-link-transition;
			&:hover, &:focus {
				background-color: #{$v};
			}
		}
	}
}

@include bg-hover($theme-colors);

a:focus {
	@extend .focus-ring;
	@extend .rounded;
}